name: Deploy to EC2
on:
  push:
    branches: [ master ]
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Run tests
        run: npm test || true

      - name: Create SSH key
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy.key
          chmod 600 ~/.ssh/deploy.key
          ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts
      - name: Check EC2 Connection
        run: |
          ssh -i ~/.ssh/deploy.key ${{ secrets.USERNAME }}@${{ secrets.HOST }} 'echo "Connection successful!"'
      - name: Deploy to EC2
        run: |
          # Stop any running application
          ssh -i ~/.ssh/deploy.key ${{ secrets.USERNAME }}@${{ secrets.HOST }} 'pm2 delete plants-api || true'
          
          # Create app directory if it doesn't exist
          ssh -i ~/.ssh/deploy.key ${{ secrets.USERNAME }}@${{ secrets.HOST }} 'mkdir -p /home/${{ secrets.USERNAME }}/app'
          
          # Copy files
          rsync -avz --delete -e "ssh -i ~/.ssh/deploy.key" ./* ${{ secrets.USERNAME }}@${{ secrets.HOST }}:/home/${{ secrets.USERNAME }}/app/
          rsync -avz --delete -e "ssh -i ~/.ssh/deploy.key" ./.* ${{ secrets.USERNAME }}@${{ secrets.HOST }}:/home/${{ secrets.USERNAME }}/app/ 2>/dev/null || true
          
          # Make reset.sh executable and run it
          echo "Running reset script..."
          ssh -i ~/.ssh/deploy.key ${{ secrets.USERNAME }}@${{ secrets.HOST }} 'cd /home/${{ secrets.USERNAME }}/app && chmod +x ./reset.sh && ./reset.sh'
          
          # Wait for reset script to complete (60 seconds)
          echo "Waiting for reset script to complete..."
          sleep 60
          
          # Start the application with PM2
          echo "Starting application with PM2..."
          ssh -i ~/.ssh/deploy.key ${{ secrets.USERNAME }}@${{ secrets.HOST }} 'cd /home/${{ secrets.USERNAME }}/app && NODE_ENV=production pm2 start npm --name "plants-api" -- start'
      - name: Verify Deployment
        run: |
          echo "Waiting for application to start..."
          sleep 10
          ssh -i ~/.ssh/deploy.key ${{ secrets.USERNAME }}@${{ secrets.HOST }} 'pm2 status'
          
          # Check if the app is responding
          echo "Checking if API is responding..."
          ssh -i ~/.ssh/deploy.key ${{ secrets.USERNAME }}@${{ secrets.HOST }} 'curl -sSf http://localhost:3000/ || echo "Warning: API not responding on localhost"'
      - name: Deployment Summary
        run: |
          echo "‚úÖ Deployment to EC2 completed"
          echo "üåê API should be available at http://${{ secrets.HOST }}:3000/"
          echo "üåê API should be available at http://ec2-13-59-190-75.us-east-2.compute.amazonaws.com:3000/api/plantas"
          echo "üåê API should be available at http://ec2-13-59-190-75.us-east-2.compute.amazonaws.com:3000/api/tipos-planta"
          echo "üåê API should be available at http://ec2-13-59-190-75.us-east-2.compute.amazonaws.com:3000/api/plantas/1"
          echo "üîç To check logs: ssh ${{ secrets.USERNAME }}@${{ secrets.HOST }} 'pm2 logs plants-api'"
          
          echo "üîç To check logs: ssh -i ~/.ssh/deploy.key ${{ secrets.USERNAME }}@${{ secrets.HOST }} 'pm2 logs plants-api'"